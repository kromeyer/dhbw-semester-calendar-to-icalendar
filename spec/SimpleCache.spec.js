// Generated by CoffeeScript 1.6.2
/*
  @author   Patrick Kromeyer
*/

var SimpleCache;

SimpleCache = require('../src/SimpleCache.js');

describe('SimpleCache', function() {
  var cache;

  cache = null;
  beforeEach(function() {
    return cache = new SimpleCache();
  });
  it('should have a getItem function, that returns null on an empty cache', function() {
    return expect(cache.getItem('key')).toBeNull();
  });
  it('should have a getItem function, that returns a stored item', function() {
    cache.setItem('key', 'value');
    return expect(cache.getItem('key')).toBe('value');
  });
  it('should have a getItem function, that returns null if item lifetime is over', function() {
    var now;

    cache.setItem('key', 'value', 1);
    now = Date.now();
    spyOn(Date, 'now').andReturn(now + 2);
    return expect(cache.getItem('key')).toBeNull();
  });
  it('should have a hasItem function, that returns false on an empty cache', function() {
    return expect(cache.hasItem('key')).toBeFalsy();
  });
  it('should have a hasItem function, that returns true on an item that is available', function() {
    cache.setItem('key', 'value');
    return expect(cache.hasItem('key')).toBeTruthy();
  });
  return it('should have a hasItem function, that returns false if item lifetime is over', function() {
    var now;

    cache.setItem('key', 'value', 1);
    now = Date.now();
    spyOn(Date, 'now').andReturn(now + 2);
    return expect(cache.hasItem('key')).toBeFalsy();
  });
});
